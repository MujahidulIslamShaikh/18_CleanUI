@page "/fetchproducts"

@using CleanUI.Models
@using CleanUI.Services

@inject ProductService productService

<h3>Product List</h3>
<NavLink href="/createproduct">Create Product</NavLink>

<div class="container">
    <div class="row">
        <div class="col-12">


            @if (products == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Id</th>
                            <th scope="col">Product Name</th>
                            <th scope="col">Details</th>
                            <th scope="col">Rate</th>
                            <th scope="col">Multiple Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in products)
                        {
                            <tr>
                                <th scope="row">@item.Id</th>
                                <td>@item.Name</td>
                                <td>@item.Desc</td>
                                <td>@item.Rate</td>
                                <td>
                                    <div class="d-flex gap-3">

                                <a href="/showProd/@item.Id">View Detils</a>
                                <a href="/updateProd/@item.Id">Update</a>
                                @* <td><a href="/deleteProd/@item.Id">Delete</a></td> *@
                                    <a href="/fetchproducts" class="text-danger" @onclick="() => DeleteProd(item.Id)">Delete</a>

                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }

        </div>
    </div>
</div>

@code {
    private List<Product>? products;

    protected override async Task OnInitializedAsync()
    {
        products = await productService.GetAllProductsAsync();
    }

    private async Task DeleteProd(int id)
    {
        await productService.DeleteProduct(id);
        products = await productService.GetAllProductsAsync(); // Refresh list.
    }

}


